- hosts: bigips
  gather_facts: False
  remote_user: root
  tasks:
    - block:
      - name: check local {{ as3_rpm_basename }} exists or not
        stat:
          path: ../deps/{{ as3_rpm_basename }}
        register: as3rpm

      - name: download f5-appsvcs-extension rpm to localhost
        uri:
          url: "{{ as3_rpm_url }}"
          dest: ../deps/{{ as3_rpm_basename }}
        when: as3rpm.stat.exists == False

      - name: check if appsvcs already deployed on BIG-IP VE
        uri:
          url: https://{{ inventory_hostname }}:443/mgmt/shared/appsvcs/info
          url_username: admin
          url_password: "{{ admin_password }}"
          validate_certs: no
          status_code: [200, 404]
        register: as3info

      - block:
        - name: get downloaded appsvcs rpm file stat
          stat: path=../deps/{{ as3_rpm_basename }}
          register: as3rpm

        - name: upload appsvcs rpm to bigip
          shell: |
            curl -kv -u admin:{{ admin_password }} \
              -H "Content-Type: application/octet-stream" \
              -H "Content-Range: 0-{{ as3rpm.stat.size - 1 }}/{{ as3rpm.stat.size }}" \
              -H "Connection: keep-alive" \
              -H "Content-Length: {{ as3rpm.stat.size }}" \
              --data-binary @../deps/{{ as3_rpm_basename }} \
              https://{{ inventory_hostname }}:443/mgmt/shared/file-transfer/uploads/{{ as3_rpm_basename }}

        - name: install appsvcs on bigip
          uri: 
            url: https://{{ inventory_hostname }}:443/mgmt/shared/iapp/package-management-tasks
            method: POST
            headers:
              Origin: https://{{ inventory_hostname }}
              Content-Type: "application/json;charset=UTF-8"
            body: "{{ body_string | string }}"
            url_username: admin
            url_password: "{{ admin_password }}"
            validate_certs: no
            status_code: [200, 202]
          vars:
            body_string: '{"operation": "INSTALL", "packageFilePath": "/var/config/rest/downloads/{{ as3_rpm_basename }}"}'

        - name: wait for as3 installation readiness
          shell: sleep 15

        when: as3info.status == 404 or reinstall is defined

      - name: get bigip as3 version
        uri:
          url: https://{{ inventory_hostname }}:443/mgmt/shared/appsvcs/info
          method: GET
          url_username: admin
          url_password: "{{ admin_password }}"
          validate_certs: no
        register: result

      - name: show as3 version
        debug: msg="{{ result.json }}"
      
      delegate_to: localhost
      vars:
        as3_rpm_basename: "{{ as3_rpm_url | basename }}"